export class MyError extends Error {
    constructor(message: string) {
        super(message);
        this.name = "MyError";
    }
}

export enum Errors {
    SERVER_SETUP="Did Not Set Up Server Well",
    ROUTE_NOT_FOUND="Route Not Found",
    INTERNAL_SERVER_ERROR="Internal Server Error",
    CONTRACT_ADDRESS="Contract Address Must Be A String",
    PLAYER_ADDRESS_VARIABLE="Player Address Variable Must Be a string",
    FUNCTION_NAME="Function Name Must Be a string",
    GAME_NAME="Game Name Must Be a string",
    CHALLENGE_ID="Challenge ID Must Be a number",
    ACTIVITY_GOAL="Activity Goal Must Be Greater Than Zero",
    ACTIVITY_ID="Activity ID Must Be a number",
    PLAYER_ADDRESS="Player Address Must Be a string",
    NOT_GET_ACTIVITIES="Could Not Get Activities",
    REWARD="Reward Must Be Greater Than 0.000001",
    NOT_CREATE_ACTIVITY="Could Not Create Activity",
    NOT_ADD_PARTICIPANT="Could Not Add Participant",
    NOT_UPDATE_POINTS="Could Not Update Points",
    CHALLENGE_NAME="Challenge Name Must Be a string",
    ACTIVITY_NAME="Activity name must be a string",
    GAME_CATEGORY="Game category must be a string",
    IMAGE="Image must be uploaded first",
    IMAGE_UPLOAD_FAILED="Image Upload Failed",
    ACTIVITY_START_DATE="Activity start date is invalid",
    ACTIVITY_END_DATE="Activity end date is invalid",
    LMDB_STORE="Could Not Store In LMDB",
    LMDB_READ="Could Not Read From LMDB",
    ACTIVITY_NOT_FOUND = "Activity Not Found",
    INVALID_ACTIVITY_ID = "Invalid Activity ID",
    NOT_CREATE_JACKPOT = "Could Not Create Jackpot",
    NOT_STORE_JACKPOT = "Could not store jackpot",
    JACKPOT_REQUIREMENT = "Jackpot requirement must be greater than 0",
    REWARD_START_DATE="Reward start date is invalid",
    REWARD_END_DATE="Reward end date is invalid",
    NOT_GET_BATTLE_STATISTICS = "Could not get battle statistics",
    MILESTONE_NOT_EXIST = "Milestone does not exist",
    NOT_CHECK_BATTLE_EXIST = "Could not check if battle exists",
    NOT_GET_NUMBER_BATTLE_PLAYERS = "Could not get number of battle players",
    NOT_GET_BATTLE_REWARD_GIVEN = "Could not get battle reward given",
    NOT_PROCESS_BATTLE = "Could not process battle",
    NOT_GET_JACKPOTS = "Could not get jackpots",
    NOT_MARK_JACKPOT_DONE = "Could not mark jackpot as done",
    NOT_MARK_JACKPOT_PLAYER_FOUND = "Could not mark jackpot player as found",
    NOT_ENTER_PLAYER_RAFFLE = "Could not enter player in raffle",
    NOT_JOIN_JACKPOT = "Could not add player to jackpot",
    JACKPOT_NOT_EXIST = "Jackpot does not exist",
    NOT_CHECK_JACKPOT_EXISTS = "Could not check if jackpot exists",
    NOT_ADD_JACKPOT_PLAYER_DB = "Could not add player to jackpot in DB",
    JACKPOT_ID = "Jackpot ID must be provided",
    NOT_CHECK_PLAYER_IN_JACKPOT = "Could not check if player is in jackpot",
    PLAYER_ALREADY_IN_JACKPOT = "Player has already joined jackpot",
    NOT_CHECK_PLAYER_IN_BATTLE = "Could not check if player is in battle",
    PLAYER_ALREADY_IN_BATTLE = "Player has already joined battle",
    NOT_CREATE_CHALLENGE = "Could not create challenge",
    GAME_ID = "Game id must be a number",
    GAME_NOT_EXIST = "Game with game ID does not exist",
    NOT_CHECK_CONTRACT_EXISTS = "Could not check if contract exists",
    NOT_CREATE_CHALLENGE_DB = "Could not add challenge to DB",
    NOT_GET_ACCOUNT = "Could not get account",
    NOT_GET_LATEST_BLOCK = "Could not get latest block",
    NOT_GET_ACTIVITIES_FROM_GAME = "Could not get activities from game",
    INVALID_ABOUT = "About should be a string",
    INVALID_INSTRUCTIONS = "Instructions should be a string",
    NOT_GET_MILESTONE_PLAYERS = "Could not get milestone players",
    NOT_SEND_WORX_NOTIFICATION = "Could not send Worx notification",
    MAXIMUM_NUMBER_PLAYERS = "Maximum number of players should be greater than zero",
    NOT_CHECK_MAXIMUM_NUM_PLAYETS = "Could not check maximum number of players",
    MAXIMUM_NUMBER_PLAYERS_REACHED = "Maximum number of players has been reached",
    NOT_CHECK_IF_CONTRACT_INFORMED_JOIN = "Could not check if contract needs to be informed of join",
    NOT_CHECK_IF_MULTI_LEVEL = "Could not check if method is multi level",
    USE_FORWARDER = "Use forwarder must be a boolean",
    FORWARDER_ADDRESS = "Forwarder address must be a string",
    METHOD_DATA_ATTRIBUTE_NAME = "Method data attribute name must be a string",
    WANTED_DATA = "Wanted data must be a string",
    COUNT_ITEMS = "Count items must be a boolean",
    CONTRACT_ADDRESS_NOT_VALID = "Contract address is not valid",
    FORWARDER_ADDRESS_NOT_VALID = "Forwarder address is not valid",
    PLAYER_ADDRESS_NOT_VALID = "Player address is not valid",
    OPERATOR_ADDRESS_NOT_VALID = "Operator address is not valid",
    OPERATOR_ADDRESS_USED_BY_OTHER_PLAYER = "The operator address is being used by another player",
    UNAUTHORIZED = "Unauthorized access",
}
