import { ContractAbi, Web3 } from "web3";
import "dotenv/config";

export function decodeTransactionInput(input: string, ABI: ContractAbi, contractAddress: string): Record<string, any> {
    try {
        const web3 = new Web3();
        const contract = new web3.eth.Contract(ABI, contractAddress);

        // Decode transaction input
        const result = contract.decodeMethodData(input);
        return result;
    } catch (err) {
        console.log("Error Decoding Transaction =>", err);
        throw new Error("Could Not Decode Transaction");
    }
}

// (() => {
//     const decoded = decodeTransactionInput(
//         "0x152bf612000000000000000000000000000000000000000000000000000000000000002091e28d9e62e964581c495b1d09605c645c9690e46de057075318b00a254c899e000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020001142d0000000000013bf15246d9d77db64802909731a6753b3bed5817611200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000",
//         [{ "inputs": [{ "internalType": "address", "name": "caller", "type": "address" }, { "internalType": "address", "name": "owner", "type": "address" }], "name": "CallerNotOwner", "type": "error" }, { "inputs": [], "name": "EmptyTransformArray", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "expected", "type": "uint256" }, { "internalType": "uint256", "name": "actual", "type": "uint256" }], "name": "InputLengthMismatch", "type": "error" }, { "inputs": [], "name": "InvalidERC20Input", "type": "error" }, { "inputs": [], "name": "InvalidERC721Input", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "gameRegistry", "type": "address" }], "name": "InvalidGameRegistry", "type": "error" }, { "inputs": [], "name": "InvalidInputTokenType", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "transformInstanceEntity", "type": "uint256" }, { "internalType": "uint16", "name": "numSuccess", "type": "uint16" }, { "internalType": "uint16", "name": "maxSuccess", "type": "uint16" }], "name": "InvalidNumSuccess", "type": "error" }, { "inputs": [], "name": "InvalidRandomWord", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "runnerEntity", "type": "uint256" }], "name": "InvalidRunner", "type": "error" }, { "inputs": [], "name": "MissingInputsOrOutputs", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "bytes32", "name": "expectedRole", "type": "bytes32" }], "name": "MissingRole", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "transformEntity", "type": "uint256" }], "name": "NoTransformRunners", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "tokenContract", "type": "address" }, { "internalType": "uint256", "name": "tokenId", "type": "uint256" }], "name": "NotOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "expected", "type": "address" }, { "internalType": "address", "name": "actual", "type": "address" }], "name": "TokenContractNotMatching", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "expected", "type": "uint256" }, { "internalType": "uint256", "name": "actual", "type": "uint256" }], "name": "TokenIdNotMatching", "type": "error" }, { "inputs": [{ "internalType": "enum ILootSystemV2.LootType", "name": "expected", "type": "uint8" }, { "internalType": "enum ILootSystemV2.LootType", "name": "actual", "type": "uint8" }], "name": "TokenTypeNotMatching", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "transformEntity", "type": "uint256" }], "name": "TransformNotAvailable", "type": "error" }, { "inputs": [{ "internalType": "uint256", "name": "transformInstanceEntity", "type": "uint256" }], "name": "TransformNotCompleteable", "type": "error" }, { "inputs": [], "name": "ZeroParamCount", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint8", "name": "version", "type": "uint8" }], "name": "Initialized", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }], "name": "Paused", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "account", "type": "address" }], "name": "Unpaused", "type": "event" }, { "inputs": [{ "internalType": "uint256[]", "name": "transformInstanceEntities", "type": "uint256[]" }], "name": "batchCompleteTransform", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "transformInstanceEntity", "type": "uint256" }], "name": "completeTransform", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "transformInstanceEntity", "type": "uint256" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "completeTransformWithAccount", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "getGameRegistry", "outputs": [{ "internalType": "contract IGameRegistry", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getId", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "gameRegistryAddress", "type": "address" }], "name": "initialize", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "components": [{ "internalType": "uint256", "name": "transformEntity", "type": "uint256" }, { "components": [{ "internalType": "enum ILootSystemV2.LootType", "name": "lootType", "type": "uint8" }, { "internalType": "uint256", "name": "lootEntity", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "internalType": "struct ILootSystemV2.Loot[]", "name": "inputs", "type": "tuple[]" }, { "internalType": "uint16", "name": "count", "type": "uint16" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "internalType": "struct TransformParams", "name": "params", "type": "tuple" }], "name": "isTransformAvailable", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "transformInstanceEntity", "type": "uint256" }], "name": "isTransformCompleteable", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "forwarder", "type": "address" }], "name": "isTrustedForwarder", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "paused", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "requestId", "type": "uint256" }, { "internalType": "uint256", "name": "randomNumber", "type": "uint256" }], "name": "randomNumberCallback", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "gameRegistryAddress", "type": "address" }], "name": "setGameRegistry", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bool", "name": "shouldPause", "type": "bool" }], "name": "setPaused", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "components": [{ "internalType": "uint256", "name": "transformEntity", "type": "uint256" }, { "components": [{ "internalType": "enum ILootSystemV2.LootType", "name": "lootType", "type": "uint8" }, { "internalType": "uint256", "name": "lootEntity", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "internalType": "struct ILootSystemV2.Loot[]", "name": "inputs", "type": "tuple[]" }, { "internalType": "uint16", "name": "count", "type": "uint16" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "internalType": "struct TransformParams", "name": "params", "type": "tuple" }], "name": "startTransform", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "components": [{ "internalType": "uint256", "name": "transformEntity", "type": "uint256" }, { "components": [{ "internalType": "enum ILootSystemV2.LootType", "name": "lootType", "type": "uint8" }, { "internalType": "uint256", "name": "lootEntity", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "internalType": "struct ILootSystemV2.Loot[]", "name": "inputs", "type": "tuple[]" }, { "internalType": "uint16", "name": "count", "type": "uint16" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "internalType": "struct TransformParams", "name": "params", "type": "tuple" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "startTransformWithAccount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }],
//         "0xe6Cc6541A4A406DC5d310e4C8a72CC72d23757ef"
//     );
//     const jsonString = JSON.stringify(decoded, (key, value) =>
//         typeof value === "bigint" ? value.toString() : value
//     );

//     console.log(jsonString);
//     process.exit(0);
// })()